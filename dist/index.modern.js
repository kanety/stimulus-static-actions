import{Context as t}from"@hotwired/stimulus";class r{constructor(t,r){this.identifier=t,this.name=r[0],this.descriptor=r[1],this.options=r[2]||{}}get description(){return this.descriptor.includes("->")?this.descriptor.replace(/->/,`->${this.identifier}#`):`${this.identifier}#${this.descriptor}`}}class e{constructor(t){this.context=t,this.controller=t.controller;let e=function(t,r){let e=function(t){const r=[];for(;t;)r.push(t),t=Object.getPrototypeOf(t);return r.reverse()}(t);return Array.from(e.reduce((t,r)=>(function(t,r){const e=t.actions;return Array.isArray(e)?e:[]}(r).forEach(r=>t.add(r)),t),new Set))}(this.controller.constructor);this.actions=e.map(t=>new r(this.controller.identifier,t))}run(){this.actions.forEach(t=>{this.resolveTargets(t).forEach(r=>{this.attachAction(r,t)})})}resolveTargets(t){let r=this.findTargets(t.name);return t.options.if?this.filterTargets(r,t.options.if):r}findTargets(t){return"element"==t?[this.controller.element]:this.controller[`${t}Targets`]?[].concat(this.controller[`${t}Targets`]):[]}filterTargets(t,r){return t.filter(t=>{let e=this.controller[r];return"function"==typeof e&&(e=e.apply(this.controller,t)),0!=e})}attachAction(t,r){let e=r.description,i=(t.dataset.action||"").split(" ");i.some(t=>t==e)||i.push(e),t.dataset.action=i.join(" ").trim()}}let i=t.prototype.connect,o=t.prototype.targetConnected;t.prototype.connect=function(){return this.actionSetter=new e(this),this.actionSetter.run(),i.apply(this,arguments)},t.prototype.targetConnected=function(){return this.actionSetter.run(),o.apply(this,arguments)};
//# sourceMappingURL=index.modern.js.map
