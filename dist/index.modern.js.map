{"version":3,"file":"index.modern.js","sources":["../src/action.js","../src/action_set.js","../src/inheritable_statics.js","../src/index.js"],"sourcesContent":["export default class Action {\n  constructor(identifier, definition) {\n    this.identifier = identifier;\n    this.name = definition[0];\n    this.descriptor = definition[1];\n    this.options = definition[2] || {};\n  };\n\n  get description() {\n    let descriptor = this.descriptor;\n    if (descriptor.match(/^:/)) {\n      descriptor = descriptor.replace(/^:/, `${this.identifier}:`)\n    }\n    if (descriptor.includes('->')) {\n      return descriptor.replace(/->/, `->${this.identifier}#`);\n    } else {\n      return `${this.identifier}#${descriptor}`;\n    }\n  }\n}\n","import Action from './action';\r\nimport { readInheritableStaticArrayValues } from './inheritable_statics';\r\n\r\nexport default class ActionSet {\r\n  constructor(context) {\r\n    this.context = context;\r\n    this.controller = context.controller;\r\n    this.actions = [];\r\n  }\r\n\r\n  run() {\r\n    this.add(readInheritableStaticArrayValues(this.controller.constructor, 'actions'));\r\n  }\r\n\r\n  add(definitions) {\r\n    let actions = definitions.map((definition) => new Action(this.controller.identifier, definition));\r\n\r\n    actions.forEach((action) => {\r\n      let targets = this.resolveTargets(action);\r\n      targets.forEach((target) => {\r\n        this.addAction(target, action);\r\n      });\r\n      this.actions.push(action);\r\n    });\r\n  }\r\n\r\n  remove(definitions) {\r\n    let actions = definitions.map((definition) => new Action(this.controller.identifier, definition));\r\n\r\n    actions.forEach((action) => {\r\n      let targets = this.resolveTargets(action);\r\n      targets.forEach((target) => {\r\n        this.removeAction(target, action);\r\n      });\r\n      this.actions = this.actions.filter((a) => a.description != action.description);\r\n    });\r\n  }\r\n\r\n  resolveTargets(action) {\r\n    let targets = this.findTargets(action.name);\r\n\r\n    if (action.options.if) {\r\n      return this.filterTargets(targets, action.options.if);\r\n    } else {\r\n      return targets;\r\n    }\r\n  }\r\n\r\n  findTargets(name) {\r\n    if (name == 'element') {\r\n      return [this.controller.element];\r\n    } else if (this.controller[`${name}Targets`]) {\r\n      return [].concat(this.controller[`${name}Targets`]);\r\n    } else {\r\n      return [];\r\n    }\r\n  }\r\n\r\n  filterTargets(targets, ifvalue) {\r\n    return targets.filter((target) => {\r\n      let property = this.controller[ifvalue];\r\n      if (typeof(property) == 'function') {\r\n        property = property.apply(this.controller, target);\r\n      }\r\n      return property != false\r\n    });\r\n  }\r\n\r\n  addAction(target, action) {\r\n    let description = action.description;\r\n    let currentDescriptions = (target.dataset['action'] || '').split(' ');\r\n    if (!currentDescriptions.some((currentDescription) => currentDescription == description)) {\r\n      currentDescriptions.push(description);\r\n    }\r\n    target.dataset['action'] = currentDescriptions.join(' ').trim();\r\n  }\r\n\r\n  removeAction(target, action) {\r\n    let description = action.description;\r\n    let currentDescriptions = (target.dataset['action'] || '').split(' ');\r\n    currentDescriptions = currentDescriptions.filter((currentDescription) => currentDescription != description);\r\n    target.dataset['action'] = currentDescriptions.join(' ').trim();\r\n  }\r\n}\r\n","export function readInheritableStaticArrayValues(constructor, propertyName) {\r\n  let ancestors = getAncestorsForConstructor(constructor);\r\n  return Array.from(ancestors.reduce((values, constructor) => {\r\n    getOwnStaticArrayValues(constructor, propertyName).forEach(name => values.add(name));\r\n    return values;\r\n  }, new Set));\r\n}\r\n\r\nfunction getAncestorsForConstructor(constructor) {\r\n  const ancestors = [];\r\n  while (constructor) {\r\n    ancestors.push(constructor);\r\n    constructor = Object.getPrototypeOf(constructor);\r\n  }\r\n  return ancestors.reverse();\r\n}\r\n\r\nfunction getOwnStaticArrayValues(constructor, propertyName) {\r\n  const definition = constructor[propertyName];\r\n  return Array.isArray(definition) ? definition : [];\r\n}\r\n","import { Context } from '@hotwired/stimulus';\nimport ActionSet from './action_set';\n\nlet oConnect = Context.prototype.connect;\nlet oTargetConnected = Context.prototype.targetConnected;\n\nContext.prototype.connect = function() {\n  this.actionSet = new ActionSet(this);\n  this.actionSet.run();\n  return oConnect.apply(this, arguments);\n};\n\nContext.prototype.targetConnected = function() {\n  this.actionSet.run();\n  return oTargetConnected.apply(this, arguments);\n}\n"],"names":["Action","constructor","identifier","definition","this","name","descriptor","options","description","match","replace","includes","ActionSet","context","controller","actions","run","add","propertyName","ancestors","push","Object","getPrototypeOf","reverse","getAncestorsForConstructor","Array","from","reduce","values","isArray","getOwnStaticArrayValues","forEach","Set","readInheritableStaticArrayValues","definitions","map","action","resolveTargets","target","addAction","remove","removeAction","filter","a","targets","findTargets","if","filterTargets","element","concat","ifvalue","property","apply","currentDescriptions","dataset","split","some","currentDescription","join","trim","oConnect","Context","prototype","connect","oTargetConnected","targetConnected","actionSet","arguments"],"mappings":"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"}